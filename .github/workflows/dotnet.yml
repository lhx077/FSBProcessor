# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET Release

on:
  release:
    types: [created, published, prereleased]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

env:
  DOTNET_VERSION: 6.0.x
  PROJECT_PATH: FSBLib/FSBLib.csproj
  CONFIGURATION: Release

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}
    
    - name: Build
      run: dotnet build ${{ env.PROJECT_PATH }} --configuration ${{ env.CONFIGURATION }} --no-restore
    
    - name: Test
      run: dotnet test --configuration ${{ env.CONFIGURATION }} --no-build --verbosity normal
    
    - name: Pack NuGet
      run: dotnet pack ${{ env.PROJECT_PATH }} --configuration ${{ env.CONFIGURATION }} --no-build --output nupkgs
    
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts
        path: |
          nupkgs/*.nupkg
          FSBLib/bin/${{ env.CONFIGURATION }}/netstandard2.0/FSBLib.dll
          FSBLib/bin/${{ env.CONFIGURATION }}/netstandard2.0/FSBLib.xml
    
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          nupkgs/*.nupkg
          FSBLib/bin/${{ env.CONFIGURATION }}/netstandard2.0/FSBLib.dll
          FSBLib/bin/${{ env.CONFIGURATION }}/netstandard2.0/FSBLib.xml
        draft: false
        prerelease: false
    
    - name: Publish to NuGet.org
      if: success() && startsWith(github.ref, 'refs/tags/') && github.event_name == 'release'
      env:
        NUGET_KEY: ${{ secrets.NUGET_API_KEY }}
      run: |
        for f in ./nupkgs/*.nupkg
        do
          dotnet nuget push "$f" --api-key $NUGET_KEY --source https://api.nuget.org/v3/index.json --skip-duplicate
        done
